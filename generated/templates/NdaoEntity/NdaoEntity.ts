// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class EntityBalanceCorrected extends ethereum.Event {
  get params(): EntityBalanceCorrected__Params {
    return new EntityBalanceCorrected__Params(this);
  }
}

export class EntityBalanceCorrected__Params {
  _event: EntityBalanceCorrected;

  constructor(event: EntityBalanceCorrected) {
    this._event = event;
  }

  get entity(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newBalance(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class EntityBalanceReconciled extends ethereum.Event {
  get params(): EntityBalanceReconciled__Params {
    return new EntityBalanceReconciled__Params(this);
  }
}

export class EntityBalanceReconciled__Params {
  _event: EntityBalanceReconciled;

  constructor(event: EntityBalanceReconciled) {
    this._event = event;
  }

  get entity(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amountReceived(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amountFee(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class EntityDeposit extends ethereum.Event {
  get params(): EntityDeposit__Params {
    return new EntityDeposit__Params(this);
  }
}

export class EntityDeposit__Params {
  _event: EntityDeposit;

  constructor(event: EntityDeposit) {
    this._event = event;
  }

  get portfolio(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get baseTokenDeposited(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get sharesReceived(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class EntityDonationReceived extends ethereum.Event {
  get params(): EntityDonationReceived__Params {
    return new EntityDonationReceived__Params(this);
  }
}

export class EntityDonationReceived__Params {
  _event: EntityDonationReceived;

  constructor(event: EntityDonationReceived) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenIn(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amountIn(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amountReceived(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get amountFee(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class EntityEthReceived extends ethereum.Event {
  get params(): EntityEthReceived__Params {
    return new EntityEthReceived__Params(this);
  }
}

export class EntityEthReceived__Params {
  _event: EntityEthReceived;

  constructor(event: EntityEthReceived) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class EntityManagerSet extends ethereum.Event {
  get params(): EntityManagerSet__Params {
    return new EntityManagerSet__Params(this);
  }
}

export class EntityManagerSet__Params {
  _event: EntityManagerSet;

  constructor(event: EntityManagerSet) {
    this._event = event;
  }

  get oldManager(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newManager(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class EntityRedeem extends ethereum.Event {
  get params(): EntityRedeem__Params {
    return new EntityRedeem__Params(this);
  }
}

export class EntityRedeem__Params {
  _event: EntityRedeem;

  constructor(event: EntityRedeem) {
    this._event = event;
  }

  get portfolio(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get sharesRedeemed(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get baseTokenReceived(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class EntityValuePaidOut extends ethereum.Event {
  get params(): EntityValuePaidOut__Params {
    return new EntityValuePaidOut__Params(this);
  }
}

export class EntityValuePaidOut__Params {
  _event: EntityValuePaidOut;

  constructor(event: EntityValuePaidOut) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amountSent(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amountFee(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class EntityValueTransferred extends ethereum.Event {
  get params(): EntityValueTransferred__Params {
    return new EntityValueTransferred__Params(this);
  }
}

export class EntityValueTransferred__Params {
  _event: EntityValueTransferred;

  constructor(event: EntityValueTransferred) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amountReceived(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amountFee(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class NdaoEntity extends ethereum.SmartContract {
  static bind(address: Address): NdaoEntity {
    return new NdaoEntity("NdaoEntity", address);
  }

  ETH_PLACEHOLDER(): Address {
    let result = super.call(
      "ETH_PLACEHOLDER",
      "ETH_PLACEHOLDER():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_ETH_PLACEHOLDER(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "ETH_PLACEHOLDER",
      "ETH_PLACEHOLDER():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  authority(): Address {
    let result = super.call("authority", "authority():(address)", []);

    return result[0].toAddress();
  }

  try_authority(): ethereum.CallResult<Address> {
    let result = super.tryCall("authority", "authority():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  balance(): BigInt {
    let result = super.call("balance", "balance():(uint256)", []);

    return result[0].toBigInt();
  }

  try_balance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balance", "balance():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  baseToken(): Address {
    let result = super.call("baseToken", "baseToken():(address)", []);

    return result[0].toAddress();
  }

  try_baseToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("baseToken", "baseToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  entityType(): i32 {
    let result = super.call("entityType", "entityType():(uint8)", []);

    return result[0].toI32();
  }

  try_entityType(): ethereum.CallResult<i32> {
    let result = super.tryCall("entityType", "entityType():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  manager(): Address {
    let result = super.call("manager", "manager():(address)", []);

    return result[0].toAddress();
  }

  try_manager(): ethereum.CallResult<Address> {
    let result = super.tryCall("manager", "manager():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  portfolioDeposit(_portfolio: Address, _amount: BigInt, _data: Bytes): BigInt {
    let result = super.call(
      "portfolioDeposit",
      "portfolioDeposit(address,uint256,bytes):(uint256)",
      [
        ethereum.Value.fromAddress(_portfolio),
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromBytes(_data)
      ]
    );

    return result[0].toBigInt();
  }

  try_portfolioDeposit(
    _portfolio: Address,
    _amount: BigInt,
    _data: Bytes
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "portfolioDeposit",
      "portfolioDeposit(address,uint256,bytes):(uint256)",
      [
        ethereum.Value.fromAddress(_portfolio),
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromBytes(_data)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  portfolioRedeem(_portfolio: Address, _shares: BigInt, _data: Bytes): BigInt {
    let result = super.call(
      "portfolioRedeem",
      "portfolioRedeem(address,uint256,bytes):(uint256)",
      [
        ethereum.Value.fromAddress(_portfolio),
        ethereum.Value.fromUnsignedBigInt(_shares),
        ethereum.Value.fromBytes(_data)
      ]
    );

    return result[0].toBigInt();
  }

  try_portfolioRedeem(
    _portfolio: Address,
    _shares: BigInt,
    _data: Bytes
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "portfolioRedeem",
      "portfolioRedeem(address,uint256,bytes):(uint256)",
      [
        ethereum.Value.fromAddress(_portfolio),
        ethereum.Value.fromUnsignedBigInt(_shares),
        ethereum.Value.fromBytes(_data)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  registry(): Address {
    let result = super.call("registry", "registry():(address)", []);

    return result[0].toAddress();
  }

  try_registry(): ethereum.CallResult<Address> {
    let result = super.tryCall("registry", "registry():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  specialTarget(): Bytes {
    let result = super.call("specialTarget", "specialTarget():(bytes20)", []);

    return result[0].toBytes();
  }

  try_specialTarget(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "specialTarget",
      "specialTarget():(bytes20)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }
}

export class CallAsEntityCall extends ethereum.Call {
  get inputs(): CallAsEntityCall__Inputs {
    return new CallAsEntityCall__Inputs(this);
  }

  get outputs(): CallAsEntityCall__Outputs {
    return new CallAsEntityCall__Outputs(this);
  }
}

export class CallAsEntityCall__Inputs {
  _call: CallAsEntityCall;

  constructor(call: CallAsEntityCall) {
    this._call = call;
  }

  get _target(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _value(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class CallAsEntityCall__Outputs {
  _call: CallAsEntityCall;

  constructor(call: CallAsEntityCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class DonateCall extends ethereum.Call {
  get inputs(): DonateCall__Inputs {
    return new DonateCall__Inputs(this);
  }

  get outputs(): DonateCall__Outputs {
    return new DonateCall__Outputs(this);
  }
}

export class DonateCall__Inputs {
  _call: DonateCall;

  constructor(call: DonateCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DonateCall__Outputs {
  _call: DonateCall;

  constructor(call: DonateCall) {
    this._call = call;
  }
}

export class DonateWithAdminOverridesCall extends ethereum.Call {
  get inputs(): DonateWithAdminOverridesCall__Inputs {
    return new DonateWithAdminOverridesCall__Inputs(this);
  }

  get outputs(): DonateWithAdminOverridesCall__Outputs {
    return new DonateWithAdminOverridesCall__Outputs(this);
  }
}

export class DonateWithAdminOverridesCall__Inputs {
  _call: DonateWithAdminOverridesCall;

  constructor(call: DonateWithAdminOverridesCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _feeOverride(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DonateWithAdminOverridesCall__Outputs {
  _call: DonateWithAdminOverridesCall;

  constructor(call: DonateWithAdminOverridesCall) {
    this._call = call;
  }
}

export class DonateWithOverridesCall extends ethereum.Call {
  get inputs(): DonateWithOverridesCall__Inputs {
    return new DonateWithOverridesCall__Inputs(this);
  }

  get outputs(): DonateWithOverridesCall__Outputs {
    return new DonateWithOverridesCall__Outputs(this);
  }
}

export class DonateWithOverridesCall__Inputs {
  _call: DonateWithOverridesCall;

  constructor(call: DonateWithOverridesCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DonateWithOverridesCall__Outputs {
  _call: DonateWithOverridesCall;

  constructor(call: DonateWithOverridesCall) {
    this._call = call;
  }
}

export class PayoutCall extends ethereum.Call {
  get inputs(): PayoutCall__Inputs {
    return new PayoutCall__Inputs(this);
  }

  get outputs(): PayoutCall__Outputs {
    return new PayoutCall__Outputs(this);
  }
}

export class PayoutCall__Inputs {
  _call: PayoutCall;

  constructor(call: PayoutCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class PayoutCall__Outputs {
  _call: PayoutCall;

  constructor(call: PayoutCall) {
    this._call = call;
  }
}

export class PayoutWithAdminOverridesCall extends ethereum.Call {
  get inputs(): PayoutWithAdminOverridesCall__Inputs {
    return new PayoutWithAdminOverridesCall__Inputs(this);
  }

  get outputs(): PayoutWithAdminOverridesCall__Outputs {
    return new PayoutWithAdminOverridesCall__Outputs(this);
  }
}

export class PayoutWithAdminOverridesCall__Inputs {
  _call: PayoutWithAdminOverridesCall;

  constructor(call: PayoutWithAdminOverridesCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _feeOverride(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class PayoutWithAdminOverridesCall__Outputs {
  _call: PayoutWithAdminOverridesCall;

  constructor(call: PayoutWithAdminOverridesCall) {
    this._call = call;
  }
}

export class PayoutWithOverridesCall extends ethereum.Call {
  get inputs(): PayoutWithOverridesCall__Inputs {
    return new PayoutWithOverridesCall__Inputs(this);
  }

  get outputs(): PayoutWithOverridesCall__Outputs {
    return new PayoutWithOverridesCall__Outputs(this);
  }
}

export class PayoutWithOverridesCall__Inputs {
  _call: PayoutWithOverridesCall;

  constructor(call: PayoutWithOverridesCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class PayoutWithOverridesCall__Outputs {
  _call: PayoutWithOverridesCall;

  constructor(call: PayoutWithOverridesCall) {
    this._call = call;
  }
}

export class PortfolioDepositCall extends ethereum.Call {
  get inputs(): PortfolioDepositCall__Inputs {
    return new PortfolioDepositCall__Inputs(this);
  }

  get outputs(): PortfolioDepositCall__Outputs {
    return new PortfolioDepositCall__Outputs(this);
  }
}

export class PortfolioDepositCall__Inputs {
  _call: PortfolioDepositCall;

  constructor(call: PortfolioDepositCall) {
    this._call = call;
  }

  get _portfolio(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class PortfolioDepositCall__Outputs {
  _call: PortfolioDepositCall;

  constructor(call: PortfolioDepositCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class PortfolioRedeemCall extends ethereum.Call {
  get inputs(): PortfolioRedeemCall__Inputs {
    return new PortfolioRedeemCall__Inputs(this);
  }

  get outputs(): PortfolioRedeemCall__Outputs {
    return new PortfolioRedeemCall__Outputs(this);
  }
}

export class PortfolioRedeemCall__Inputs {
  _call: PortfolioRedeemCall;

  constructor(call: PortfolioRedeemCall) {
    this._call = call;
  }

  get _portfolio(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _shares(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class PortfolioRedeemCall__Outputs {
  _call: PortfolioRedeemCall;

  constructor(call: PortfolioRedeemCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ReceiveTransferCall extends ethereum.Call {
  get inputs(): ReceiveTransferCall__Inputs {
    return new ReceiveTransferCall__Inputs(this);
  }

  get outputs(): ReceiveTransferCall__Outputs {
    return new ReceiveTransferCall__Outputs(this);
  }
}

export class ReceiveTransferCall__Inputs {
  _call: ReceiveTransferCall;

  constructor(call: ReceiveTransferCall) {
    this._call = call;
  }

  get _transferAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ReceiveTransferCall__Outputs {
  _call: ReceiveTransferCall;

  constructor(call: ReceiveTransferCall) {
    this._call = call;
  }
}

export class ReconcileBalanceCall extends ethereum.Call {
  get inputs(): ReconcileBalanceCall__Inputs {
    return new ReconcileBalanceCall__Inputs(this);
  }

  get outputs(): ReconcileBalanceCall__Outputs {
    return new ReconcileBalanceCall__Outputs(this);
  }
}

export class ReconcileBalanceCall__Inputs {
  _call: ReconcileBalanceCall;

  constructor(call: ReconcileBalanceCall) {
    this._call = call;
  }
}

export class ReconcileBalanceCall__Outputs {
  _call: ReconcileBalanceCall;

  constructor(call: ReconcileBalanceCall) {
    this._call = call;
  }
}

export class SetManagerCall extends ethereum.Call {
  get inputs(): SetManagerCall__Inputs {
    return new SetManagerCall__Inputs(this);
  }

  get outputs(): SetManagerCall__Outputs {
    return new SetManagerCall__Outputs(this);
  }
}

export class SetManagerCall__Inputs {
  _call: SetManagerCall;

  constructor(call: SetManagerCall) {
    this._call = call;
  }

  get _manager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetManagerCall__Outputs {
  _call: SetManagerCall;

  constructor(call: SetManagerCall) {
    this._call = call;
  }
}

export class SwapAndDonateCall extends ethereum.Call {
  get inputs(): SwapAndDonateCall__Inputs {
    return new SwapAndDonateCall__Inputs(this);
  }

  get outputs(): SwapAndDonateCall__Outputs {
    return new SwapAndDonateCall__Outputs(this);
  }
}

export class SwapAndDonateCall__Inputs {
  _call: SwapAndDonateCall;

  constructor(call: SwapAndDonateCall) {
    this._call = call;
  }

  get _swapWrapper(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenIn(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amountIn(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SwapAndDonateCall__Outputs {
  _call: SwapAndDonateCall;

  constructor(call: SwapAndDonateCall) {
    this._call = call;
  }
}

export class SwapAndDonateWithOverridesCall extends ethereum.Call {
  get inputs(): SwapAndDonateWithOverridesCall__Inputs {
    return new SwapAndDonateWithOverridesCall__Inputs(this);
  }

  get outputs(): SwapAndDonateWithOverridesCall__Outputs {
    return new SwapAndDonateWithOverridesCall__Outputs(this);
  }
}

export class SwapAndDonateWithOverridesCall__Inputs {
  _call: SwapAndDonateWithOverridesCall;

  constructor(call: SwapAndDonateWithOverridesCall) {
    this._call = call;
  }

  get _swapWrapper(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenIn(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amountIn(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SwapAndDonateWithOverridesCall__Outputs {
  _call: SwapAndDonateWithOverridesCall;

  constructor(call: SwapAndDonateWithOverridesCall) {
    this._call = call;
  }
}

export class SwapAndReconcileBalanceCall extends ethereum.Call {
  get inputs(): SwapAndReconcileBalanceCall__Inputs {
    return new SwapAndReconcileBalanceCall__Inputs(this);
  }

  get outputs(): SwapAndReconcileBalanceCall__Outputs {
    return new SwapAndReconcileBalanceCall__Outputs(this);
  }
}

export class SwapAndReconcileBalanceCall__Inputs {
  _call: SwapAndReconcileBalanceCall;

  constructor(call: SwapAndReconcileBalanceCall) {
    this._call = call;
  }

  get _swapWrapper(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenIn(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amountIn(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SwapAndReconcileBalanceCall__Outputs {
  _call: SwapAndReconcileBalanceCall;

  constructor(call: SwapAndReconcileBalanceCall) {
    this._call = call;
  }
}

export class TransferToEntityCall extends ethereum.Call {
  get inputs(): TransferToEntityCall__Inputs {
    return new TransferToEntityCall__Inputs(this);
  }

  get outputs(): TransferToEntityCall__Outputs {
    return new TransferToEntityCall__Outputs(this);
  }
}

export class TransferToEntityCall__Inputs {
  _call: TransferToEntityCall;

  constructor(call: TransferToEntityCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferToEntityCall__Outputs {
  _call: TransferToEntityCall;

  constructor(call: TransferToEntityCall) {
    this._call = call;
  }
}

export class TransferToEntityWithAdminOverridesCall extends ethereum.Call {
  get inputs(): TransferToEntityWithAdminOverridesCall__Inputs {
    return new TransferToEntityWithAdminOverridesCall__Inputs(this);
  }

  get outputs(): TransferToEntityWithAdminOverridesCall__Outputs {
    return new TransferToEntityWithAdminOverridesCall__Outputs(this);
  }
}

export class TransferToEntityWithAdminOverridesCall__Inputs {
  _call: TransferToEntityWithAdminOverridesCall;

  constructor(call: TransferToEntityWithAdminOverridesCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _feeOverride(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferToEntityWithAdminOverridesCall__Outputs {
  _call: TransferToEntityWithAdminOverridesCall;

  constructor(call: TransferToEntityWithAdminOverridesCall) {
    this._call = call;
  }
}

export class TransferToEntityWithOverridesCall extends ethereum.Call {
  get inputs(): TransferToEntityWithOverridesCall__Inputs {
    return new TransferToEntityWithOverridesCall__Inputs(this);
  }

  get outputs(): TransferToEntityWithOverridesCall__Outputs {
    return new TransferToEntityWithOverridesCall__Outputs(this);
  }
}

export class TransferToEntityWithOverridesCall__Inputs {
  _call: TransferToEntityWithOverridesCall;

  constructor(call: TransferToEntityWithOverridesCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferToEntityWithOverridesCall__Outputs {
  _call: TransferToEntityWithOverridesCall;

  constructor(call: TransferToEntityWithOverridesCall) {
    this._call = call;
  }
}
